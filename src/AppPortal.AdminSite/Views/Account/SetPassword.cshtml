@model SetPasswordViewModel
@{
    ViewData["FeatureTitle"] = "Quản lý tài khoản";
    ViewData["Title"] = "Cài đặt mật khẩu";
    var formView = "frm_setup_password";
}

<div class="row">
    <div class="col col-sm-6">
        @await Html.PartialAsync("_StatusMessage", Model.StatusMessage)
        <div id="result_message"></div>
        <div class="card card-primary card-outline">
            <div class="card-header">
                <h3 class="card-title">@ViewData["Title"]</h3>

                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-widget="collapse" data-toggle="tooltip" title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                </div>
            </div>
            <form id="@formView" class="needs-validation" method="post">
                <div class="card-body">
                    <div class="form-group">
                        <label asp-for="NewPassword"></label>
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text">
                                    <i class="icon ion-locked"></i>
                                </span>
                            </div>
                            <input asp-for="NewPassword" class="form-control" placeholder="Mật khẩu mới" required />
                            <span asp-validation-for="NewPassword" class="invalid-feedback"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        <label asp-for="ConfirmPassword"></label>
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text">
                                    <i class="icon ion-locked"></i>
                                </span>
                            </div>
                            <input asp-for="ConfirmPassword" class="form-control" placeholder="Xác nhận mật khẩu mới" required />
                            <span asp-validation-for="ConfirmPassword" class="invalid-feedback"></span>
                        </div>
                    </div>                  

                    <div class="form-group">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary btn-block btn-flat">Cài đặt mật khẩu</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/accounts/scripts.js"></script>
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                var form = document.getElementById('@formView');
                var $form = $('form#@formView');
                var jwtToken = getCookie("ACCESS-TOKEN");
                form.addEventListener('submit', function (event) {
                    if ($form.valid() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                    event.preventDefault();
                    if ($form.valid()) {
                        var csrfToken = $("input[name='__RequestVerificationToken']").val();
                        var dataJson = {
                            NewPassword: $("input[name='NewPassword']").val(),
                            ConfirmPassword: $("input[name='ConfirmPassword']").val()
                        };

                        callAjax(
                            `${appConfig.apiHostUrl}/${ACCOUNT_API.SETUP_PASSWORD}`,
                            dataJson,
                            AjaxConst.PostRequest,
                            function (xhr) {
                                xhr.setRequestHeader('__RequestVerificationToken', csrfToken);
                                xhr.setRequestHeader('Authorization', `Bearer ${jwtToken}`);
                                $form.children('.form-group').find('button').addClass('disabled').attr('disabled', true);
                            },
                            function (success) {
                                //console.log('success ', success)
                                if (!success.did_error) {
                                    messagerSuccess('Cập nhật mật khẩu', success.model);
                                    var html = '<div class="alert alert-info alert-dismissible">' +
                                        '<button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>' +
                                        '<h5><i class="icon icon fa fa-info"></i> Thông báo!</h5>' +
                                        success.model +
                                        '</div>';
                                    $('#result_message').append(html);
                                }
                            },
                            function (xhr, status, error) {
                                if (xhr.status === 400) {
                                    var err = eval("(" + xhr.responseText + ")");
                                    err.forEach(function (item) {
                                        messagerError(item.Code, item.Description);
                                    });
                                } else {
                                    messagerError(MESSAGES.ERR_CONNECTION.key, MESSAGES.ERR_CONNECTION.value);
                                }
                            },
                            function (complete) {
                                $form.children('.form-group').find('button').removeClass('disabled').removeAttr('disabled');
                                $form.clearFormData();
                            }
                        )
                    }
                }, false);
            }, false);
        })();

    </script>
}